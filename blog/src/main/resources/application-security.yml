spring:
  security:
    oauth2:
      client:
        registration:
          # google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
          #   client-id: [client id]
          #   client-secret: [client password]
          #   scope:
          #   - email
          #   - profile

          # facebook:
          #   client-id: [client id]
          #   client-secret: [client password]
          #   scope:
          #   - email
          #   - public_profile

          # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
          # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
          naver:
            client-id: AF2_9G_PJHt740lWvLvL
            client-secret: m5qhMdsH3V
            # scope:
            #   - name
            #   - email
            #   - profile_image
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:1117/login
          kakao:
            client-id: 66a3c4f30070fb41d85ba9caff0d3e49
            client-secret: BVBI4HcMwiWwfh2XVb7OTOZxT9etivKM
            redirect-uri: http://localhost:1117/login
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

jwt:
  secretKey: bXlTZWNyZXRLZXlteVNlY3JldEtleW15U2VjcmV0S2V5bXlTZWNyZXRLZXlteVNlY3JldEtleQ==
